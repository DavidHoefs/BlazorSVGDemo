@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace BlazorSVGDemo.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="~/"/>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css"/>
    <link href="css/site.css" rel="stylesheet"/>
    <link href="BlazorSVGDemo.styles.css" rel="stylesheet"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <link href="css/SvgStyle.css" rel="stylesheet"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered"/>
</head>
<body>
<component type="typeof(App)" render-mode="ServerPrerendered"/>

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script src="_framework/blazor.server.js"></script>
<script src="JS/SvgHelper.js"></script>
<script>

    window.ContainerPos = (input) => {
        var element = document.getElementsByClassName("MainSVG")[0];
        var rect = element.getBoundingClientRect();
        return [rect.x, rect.y];
    };

    window.RemoveElement = (elementId) => {
        var element = document.getElementById(elementId);
        element.parentNode.removeChild(element);
    };

    window.PlaceOnTop = (elementId) => {
        var element = document.getElementById(elementId);
        element.parentNode.appendChild(element);
    };
</script>

<script type="text/javascript" src="JS/svg-loader.min.js" async></script>


</body>
</html>